MARK NAKAMAE
CPE 453: Introduction to Operating Systems
Project 1: Malloc

I've spent hours debugging this, but unfortunately could not iron out every
small bug. For the most part, I can get almost all test cases to pass, but
could not get all of them to pass on a single compile. I've noted the expected
functionality of the program, as well as the errors I encountered while
debugging. I hope the many hours of effort put forth show in both the
debugging notes, and functionality of the program.


****FUNCTIONALITY****
This program implements the behavior of the library functions malloc,
calloc, realloc, and free. Malloc, calloc, and realloc, return (void *)
to the user upon call, while free has no return value. Free instead
removes data from the doublely linked list applied to the heap.

Malloc expects the amount of memory requested as a parameter. Malloc
initializes a memory space for the user. Calloc expects a type and the
number of these types that need to fit in the allocated memory space.
This essentially acts like a malloc call, but the memory space provided
is preset to NULL. Realloc takes in an existing memory space and the
new size for this memory space. Realloc adjusts the size of an input
memory space.


****COMPILATION NOTES****
The included Makefile allows for easy creation of both lib64 and lib32
folders upon calling make in the terminal. 


****DEBUGGING NOTES****
I included a #define DEBUG_MALLOC 0, and to turn on comments, change this line
of code to #define DEBUG_MALLOC 1.

The logic in the if statements for realloc work, and properly change/do not
change the location of the realloc buffer. However, I could not figure out the
if conditional statements such that they would all work on one compile. For
this reason, tests 42-47 work, but with different lines of the commented code
in realloc for each compile.

Tests 34 and 35 both seg fault when trying to combine adjacent freed nodes. I
tried two different implementations, and included them in comments, but could
not figure out how to get them to work as intended.

Tests 19 and 20 do not properly realloc, but malloc works correctly.

These problems seem to stem from free()'s and realloc()'s inability to find
internal pointers consistently.
